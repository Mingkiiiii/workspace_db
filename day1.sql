--SQL
-- DML (SELECT, INSERT, UPDATE, DELETE)
--      조회, 삽입, 수정, 삭제
SELECT * --*은 전체 컬럼을 의미함
FROM employees;
SELECT employee_id, emp_name
From employees;

/* table 테이블
1. 테이블명 컬럼명의 최대 크기는30바이트
2. 테이블명 컬럼명으로 예약어는 사용할 수 없음
3. 테이블명 컬럼명으로 문자, 숫자, _,$,#을 사용할 수 있지만 첫글자는 문자만 올 수 있음
4. 한테이블에 사용가능한 컬럼은 최대 255개
*/
CREATE TABLE ex1_1(
--하나의 컬럼은 하나의 타입과 사이즈를 가짐
    col1 CHAR(10)
    ,col2 VARCHAR(10) --컬럼을 , 로 구분
    );
    
-- INSERT 데이터 삽입
INSERT INTO ex1_1 (col1, col2)
VALUES('abc','ABC');
INSERT INTO ex1_1 (col1, col2)
VALUES('안녕','하하하');
SELECT *
FROM ex1_1;
--테이블 삭제
drop table ex1_1;
--명령어는 대소문자를 구별하지 않음.
--명령어를 쉽게 구분하려고 대소문자 사용
SQL은 보기 쉽게 들여쓰기를 해서 사용
SELECT emp_name as nm --AS(alias 별칭)
        , hire_date hd    --콤마를 구분으로 컬럼명 띄어쓰기 이후
        , salary sa_la
        , department_id d_id
FROM employees;

--검색 조건이 있다면 where절 사용
SELECT *
FROM employees
WHERE salary >= 10000;
-- 검색조건이 여러개  AND or OR
SELECT *
FROM employees
WHERE salary >= 10000
AND salary < 11000;

SELECT *
FROM employees
WHERE department_id = 30
OR department_id = 60;

--정렬조건이 있다면 order by사용 ABC오름차순, DESC 내림차순
SELECT emp_name, department_id
FROM employees
WHERE department_id = 30
OR department_id = 60
ORDER BY department_id DESC;SELECT emp_name, department_id
FROM employees
WHERE department_id = 30
OR department_id = 60
--ORDER BY department_id DESC;
ORDER BY 2 DESC, 1 ASC;     --select절에 컬럼의 순서

-- 사칙연산  사용가능
SELECT emp_name
    , ROUND(salary /30,2) as 일당
    , salary as 월급
    , salary - salary * 0.1 as 실수령액
    , salary * 12 as 연봉
FROM employees
ORDER BY 3 DESC; --월급 내림차순 정렬

--논리 연산자
SELECT * FROM employees WHERE salary = 2600; --같다
SELECT * FROM employees WHERE salary <> 2600; --같지않다
SELECT * FROM employees WHERE salary != 2600; --같지않다
SELECT * FROM employees WHERE salary < 2600; --미만
SELECT * FROM employees WHERE salary > 2600; --초과
SELECT * FROM employees WHERE salary <= 2600; --이하
SELECT * FROM employees WHERE salary >= 2600; --이상
/*PRODUCTS 테이블에서 상품 최저 금액(prod_min_price)가 
30이상 50미만의 상품명과 ㅏ테고리,최저금액을 출력하시오
정렬조건은 카테고리 오름차순 최저금액 내림차순*/
SELECT PROD_NAME,PROD_CATEGORY, PROD_MIN_PRICE
FROM PRODUCTS
WHERE prod_min_price >= 30
AND prod_min_price < 50
ORDER BY 2 ASC, 3 DESC;